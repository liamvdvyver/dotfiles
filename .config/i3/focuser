#!/usr/bin/python3

import argparse
import i3ipc

parser = argparse.ArgumentParser()
parser.add_argument("action")
arg = parser.parse_args().action


def find_parent(con, workspace):
    parent = None
    for candidate in [workspace] + workspace.descendants():
        for dsc in candidate.descendants():
            if dsc.id == con.id:
                parent = candidate

    return parent


def get_vars():
    # Initiate i3ipc library.
    global i3
    i3 = i3ipc.Connection()

    # We need tree of containers to find focused and the biggest one.
    global tree
    tree = i3.get_tree()

    # Class of currently focused container.
    global focused
    focused = tree.find_focused()

    global workspace
    workspace = focused.workspace()

    global parent
    parent = find_parent(focused, workspace)

    global layout
    layout = parent.layout


get_vars()


if arg == "down":
    if layout == "tabbed":
        i3.command("focus left")
    else:
        i3.command("focus down")

if arg == "up":
    if layout == "tabbed":
        i3.command("focus right")
    else:
        i3.command("focus up")
